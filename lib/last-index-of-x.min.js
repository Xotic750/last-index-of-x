!function(f){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=f();else if("function"==typeof define&&define.amd)define([],f);else{("undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this).returnExports=f()}}(function(){return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a="function"==typeof require&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n||e)},l,l.exports,e,t,n,r)}return n[o].exports}for(var i="function"==typeof require&&require,o=0;o<r.length;o++)s(r[o]);return s}({1:[function(_dereq_,module,exports){/**
 * @file An extended ES6 lastIndexOf.
 * @version 2.2.0
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module last-index-of-x
 */
"use strict";var isWorking,numberIsNaN=_dereq_("is-nan-x"),findLastIndex=_dereq_("find-last-index-x"),isString=_dereq_("is-string"),toObject=_dereq_("to-object-x"),toLength=_dereq_("to-length-x"),sameValueZero=_dereq_("same-value-zero-x"),sameValue=_dereq_("same-value-x"),calcFromIndexRight=_dereq_("calculate-from-index-right-x"),splitIfBoxedBug=_dereq_("split-if-boxed-bug-x"),pLastIndexOf="function"==typeof Array.prototype.lastIndexOf&&Array.prototype.lastIndexOf;if(pLastIndexOf){var attempt=_dereq_("attempt-x"),res=attempt.call([0,1],pLastIndexOf,0,-3);if((isWorking=!1===res.threw&&-1===res.value)&&(isWorking=!1===(res=attempt.call([0,1,0],pLastIndexOf,0)).threw&&2===res.value),isWorking&&(isWorking=!1===(res=attempt.call([0,-0],pLastIndexOf,0)).threw&&1===res.value),isWorking){var testArr=[];testArr.length=2,testArr[0]=void 0,isWorking=!1===(res=attempt.call(testArr,pLastIndexOf,void 0)).threw&&0===res.value}isWorking&&(isWorking=!1===(res=attempt.call("abc",pLastIndexOf,"c")).threw&&2===res.value),isWorking&&(isWorking=!1===(res=attempt.call(function(){return arguments}("a","b","c"),pLastIndexOf,"c")).threw&&2===res.value)}!0!==isWorking&&(pLastIndexOf=function lastIndexOf(searchElement){if(toLength(this.length)<1)return-1;for(var i=arguments[1];i>=0;){if(i in this&&searchElement===this[i])return i;i-=1}return-1});var findLastIdxFrom=function findLastIndexFrom(array,searchElement,fromIndex,extendFn){for(var fIdx=fromIndex;fIdx>=0;){if(fIdx in array&&extendFn(array[fIdx],searchElement))return fIdx;fIdx-=1}return-1};module.exports=function lastIndexOf(array,searchElement){var object=toObject(array),iterable=splitIfBoxedBug(object),length=toLength(iterable.length);if(length<1)return-1;var extendFn,argLength=arguments.length,extend=argLength>2&&argLength>3?arguments[3]:arguments[2];isString(extend)&&("samevalue"===(extend=extend.toLowerCase())?extendFn=sameValue:"samevaluezero"===extend&&(extendFn=sameValueZero));var fromIndex=length-1;if(extendFn&&(0===searchElement||numberIsNaN(searchElement))){if(argLength>3){if((fromIndex=calcFromIndexRight(iterable,arguments[2]))<0)return-1;fromIndex>=length&&(fromIndex=length-1)}return fromIndex<length-1?findLastIdxFrom(iterable,searchElement,fromIndex,extendFn):findLastIndex(iterable,function(element,index){return index in iterable&&extendFn(searchElement,element)})}if(argLength>3||argLength>2&&!1===Boolean(extendFn)){if((fromIndex=calcFromIndexRight(iterable,arguments[2]))<0)return-1;fromIndex>=length&&(fromIndex=length-1)}return pLastIndexOf.call(iterable,searchElement,fromIndex)}},{"attempt-x":4,"calculate-from-index-right-x":5,"find-last-index-x":6,"is-nan-x":16,"is-string":20,"same-value-x":29,"same-value-zero-x":30,"split-if-boxed-bug-x":31,"to-length-x":33,"to-object-x":35}],2:[function(_dereq_,module,exports){/**
 * @file Cross-browser array-like slicer.
 * @version 1.1.0
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module array-like-slice-x
 */
"use strict";var toObject=_dereq_("to-object-x"),toInteger=_dereq_("to-integer-x"),toLength=_dereq_("to-length-x"),isUndefined=_dereq_("validate.io-undefined"),splitIfBoxedBug=_dereq_("split-if-boxed-bug-x"),setRelative=function _setRelative(value,length){return value<0?Math.max(length+value,0):Math.min(value,length)};module.exports=function slice(arrayLike,start,end){var iterable=splitIfBoxedBug(toObject(arrayLike)),length=toLength(iterable.length),k=setRelative(toInteger(start),length),relativeEnd=isUndefined(end)?length:toInteger(end),finalEnd=setRelative(relativeEnd,length),val=[];val.length=Math.max(finalEnd-k,0);for(var next=0;k<finalEnd;)k in iterable&&(val[next]=iterable[k]),next+=1,k+=1;return val}},{"split-if-boxed-bug-x":31,"to-integer-x":32,"to-length-x":33,"to-object-x":35,"validate.io-undefined":42}],3:[function(_dereq_,module,exports){/**
 * @file If isFunction(callbackfn) is false, throw a TypeError exception.
 * @version 2.0.1
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module assert-is-function-x
 */
"use strict";var isFunction=_dereq_("is-function-x"),safeToString=_dereq_("safe-to-string-x"),isPrimitive=_dereq_("is-primitive");module.exports=function assertIsFunction(callback){if(!1===isFunction(callback)){var msg=isPrimitive(callback)?safeToString(callback):"#<Object>";throw new TypeError(msg+" is not a function")}return callback}},{"is-function-x":13,"is-primitive":18,"safe-to-string-x":28}],4:[function(_dereq_,module,exports){/**
 * @file Invokes function, returning an object of the results.
 * @version 1.1.0
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module attempt-x
 */
"use strict";var arrayLikeSlice=_dereq_("array-like-slice-x");module.exports=function attempt(fn){try{return{threw:!1,value:fn.apply(this,arrayLikeSlice(arguments,1))}}catch(e){return{threw:!0,value:e}}}},{"array-like-slice-x":2}],5:[function(_dereq_,module,exports){/**
 * @file Calculates a fromIndexRight of a given value for an array.
 * @version 2.1.0
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module calculate-from-index-right-x
 */
"use strict";var toObject=_dereq_("to-object-x"),toLength=_dereq_("to-length-x"),toInteger=_dereq_("to-integer-x"),isArrayLike=_dereq_("is-array-like-x");module.exports=function calcFromIndexRight(array,fromIndex){var object=toObject(array);if(!1===isArrayLike(object))return 0;var length=toLength(object.length),index=Math.min(toInteger(fromIndex),length-1);return index>=0?index:length+index}},{"is-array-like-x":10,"to-integer-x":32,"to-length-x":33,"to-object-x":35}],6:[function(_dereq_,module,exports){/**
 * @file Search an array from the end and return the matched index.
 * @version 2.1.0
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module find-last-index-x
 */
"use strict";var toLength=_dereq_("to-length-x"),toObject=_dereq_("to-object-x"),assertIsFunction=_dereq_("assert-is-function-x"),splitIfBoxedBug=_dereq_("split-if-boxed-bug-x");module.exports=function findLastIndex(array,callback,thisArg){var object=toObject(array);assertIsFunction(callback);var iterable=splitIfBoxedBug(object),index=toLength(iterable.length)-1;if(index<0)return-1;for(;index>-1;){if(callback.call(thisArg,iterable[index],index,object))return index;index-=1}return-1}},{"assert-is-function-x":3,"split-if-boxed-bug-x":31,"to-length-x":33,"to-object-x":35}],7:[function(_dereq_,module,exports){/**
 * @file Check support of by-index access of string characters.
 * @version 1.0.1
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module has-boxed-string-x
 */
"use strict";var boxedString=Object("a");module.exports="a"===boxedString[0]&&0 in boxedString},{}],8:[function(_dereq_,module,exports){/**
 * @file Tests if ES6 Symbol is supported.
 * @version 1.4.1
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module has-symbol-support-x
 */
"use strict";module.exports="function"==typeof Symbol&&"symbol"==typeof Symbol("")},{}],9:[function(_dereq_,module,exports){/**
 * @file Tests if ES6 @@toStringTag is supported.
 * @see {@link http://www.ecma-international.org/ecma-262/6.0/#sec-@@tostringtag|26.3.1 @@toStringTag}
 * @version 1.4.1
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module has-to-string-tag-x
 */
"use strict";module.exports=_dereq_("has-symbol-support-x")&&"symbol"==typeof Symbol.toStringTag},{"has-symbol-support-x":8}],10:[function(_dereq_,module,exports){/**
 * @file Determine if a value is array like.
 * @version 1.7.0
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module is-array-like-x
 */
"use strict";var isNil=_dereq_("is-nil-x"),isFunction=_dereq_("is-function-x"),isLength=_dereq_("is-length-x");module.exports=function isArrayLike(value){return!1===isNil(value)&&!1===isFunction(value,!0)&&isLength(value.length)}},{"is-function-x":13,"is-length-x":15,"is-nil-x":17}],11:[function(_dereq_,module,exports){"use strict";var getDay=Date.prototype.getDay,tryDateObject=function tryDateObject(value){try{return getDay.call(value),!0}catch(e){return!1}},toStr=Object.prototype.toString,hasToStringTag="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;module.exports=function isDateObject(value){return"object"==typeof value&&null!==value&&(hasToStringTag?tryDateObject(value):"[object Date]"===toStr.call(value))}},{}],12:[function(_dereq_,module,exports){/**
 * @file ES6-compliant shim for Number.isFinite.
 * @see {@link http://www.ecma-international.org/ecma-262/6.0/#sec-number.isfinite|20.1.2.2 Number.isFinite ( number )}
 * @version 3.0.1
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module is-finite-x
 */
"use strict";var numberIsNaN=_dereq_("is-nan-x");module.exports=function isFinite(number){return"number"==typeof number&&!1===numberIsNaN(number)&&number!==1/0&&number!==-1/0}},{"is-nan-x":16}],13:[function(_dereq_,module,exports){/**
 * @file Determine whether a given value is a function object.
 * @version 3.1.1
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module is-function-x
 */
"use strict";var fToString=Function.prototype.toString,toStringTag=_dereq_("to-string-tag-x"),hasToStringTag=_dereq_("has-to-string-tag-x"),isPrimitive=_dereq_("is-primitive"),normalise=_dereq_("normalize-space-x"),deComment=_dereq_("replace-comments-x"),hasNativeClass=!0;try{Function('"use strict"; return class My {};')()}catch(ignore){hasNativeClass=!1}var ctrRx=/^class /,isES6ClassFn=function isES6ClassFunc(value){try{return ctrRx.test(normalise(deComment(fToString.call(value)," ")))}catch(ignore){}return!1},tryFuncToString=function funcToString(value,allowClass){try{return(!hasNativeClass||!1!==allowClass||!isES6ClassFn(value))&&(fToString.call(value),!0)}catch(ignore){}return!1};module.exports=function isFunction(value){if(isPrimitive(value))return!1;var allowClass=arguments.length>0&&Boolean(arguments[1]);if(hasToStringTag)return tryFuncToString(value,allowClass);if(hasNativeClass&&!1===allowClass&&isES6ClassFn(value))return!1;var strTag=toStringTag(value);return"[object Function]"===strTag||"[object GeneratorFunction]"===strTag||"[object AsyncFunction]"===strTag}},{"has-to-string-tag-x":9,"is-primitive":18,"normalize-space-x":25,"replace-comments-x":26,"to-string-tag-x":37}],14:[function(_dereq_,module,exports){/**
 * @file Determine whether the passed value is an integer.
 * @version 1.1.0
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module is-integer-x
 */
"use strict";var numberIsFinite=_dereq_("is-finite-x"),toInteger=_dereq_("to-integer-x");module.exports=function isInteger(value){return numberIsFinite(value)&&toInteger(value)===value}},{"is-finite-x":12,"to-integer-x":32}],15:[function(_dereq_,module,exports){/**
 * @file Checks if `value` is a valid array-like length.
 * @version 2.1.0
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module is-length-x
 */
"use strict";var isSafeInteger=_dereq_("is-safe-integer-x");module.exports=function isLength(value){return isSafeInteger(value)&&value>=0}},{"is-safe-integer-x":19}],16:[function(_dereq_,module,exports){/**
 * @file ES6-compliant shim for Number.isNaN - the global isNaN returns false positives.
 * @version 1.0.1
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module is-nan-x
 */
"use strict";module.exports=function isNaN(value){return value!==value}},{}],17:[function(_dereq_,module,exports){/**
 * @file Checks if `value` is `null` or `undefined`.
 * @version 1.4.1
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module is-nil-x
 */
"use strict";var isUndefined=_dereq_("validate.io-undefined"),isNull=_dereq_("lodash.isnull");module.exports=function isNil(value){return isNull(value)||isUndefined(value)}},{"lodash.isnull":22,"validate.io-undefined":42}],18:[function(_dereq_,module,exports){"use strict";module.exports=function isPrimitive(value){return null==value||"function"!=typeof value&&"object"!=typeof value}},{}],19:[function(_dereq_,module,exports){/**
 * @file Determine whether the passed value is a safe integer.
 * @version 1.1.0
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module is-safe-integer-x
 */
"use strict";var isInteger=_dereq_("is-integer-x"),MAX_SAFE_INTEGER=_dereq_("max-safe-integer"),MIN_SAFE_INTEGER=-MAX_SAFE_INTEGER;module.exports=function isSafeInteger(value){return isInteger(value)&&value>=MIN_SAFE_INTEGER&&value<=MAX_SAFE_INTEGER}},{"is-integer-x":14,"max-safe-integer":24}],20:[function(_dereq_,module,exports){"use strict";var strValue=String.prototype.valueOf,tryStringObject=function tryStringObject(value){try{return strValue.call(value),!0}catch(e){return!1}},toStr=Object.prototype.toString,hasToStringTag="function"==typeof Symbol&&"symbol"==typeof Symbol.toStringTag;module.exports=function isString(value){return"string"==typeof value||"object"==typeof value&&(hasToStringTag?tryStringObject(value):"[object String]"===toStr.call(value))}},{}],21:[function(_dereq_,module,exports){"use strict";var toStr=Object.prototype.toString;if("function"==typeof Symbol&&"symbol"==typeof Symbol()){var symToStr=Symbol.prototype.toString,symStringRegex=/^Symbol\(.*\)$/,isSymbolObject=function isSymbolObject(value){return"symbol"==typeof value.valueOf()&&symStringRegex.test(symToStr.call(value))};module.exports=function isSymbol(value){if("symbol"==typeof value)return!0;if("[object Symbol]"!==toStr.call(value))return!1;try{return isSymbolObject(value)}catch(e){return!1}}}else module.exports=function isSymbol(value){return!1}},{}],22:[function(_dereq_,module,exports){module.exports=function isNull(value){return null===value}},{}],23:[function(_dereq_,module,exports){/**
 * @file ES6-compliant shim for Math.sign.
 * @see {@link http://www.ecma-international.org/ecma-262/6.0/#sec-math.sign|20.2.2.29 Math.sign(x)}
 * @version 2.1.0
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module math-sign-x
 */
"use strict";var toNumber=_dereq_("to-number-x"),numberIsNaN=_dereq_("is-nan-x");module.exports=function sign(x){var n=toNumber(x);return 0===n||numberIsNaN(n)?n:n>0?1:-1}},{"is-nan-x":16,"to-number-x":34}],24:[function(_dereq_,module,exports){"use strict";module.exports=9007199254740991},{}],25:[function(_dereq_,module,exports){/**
 * @file Trims and replaces sequences of whitespace characters by a single space.
 * @version 1.3.3
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module normalize-space-x
 */
"use strict";var trim=_dereq_("trim-x"),reNormalize=new RegExp("["+_dereq_("white-space-x").string+"]+","g");module.exports=function normalizeSpace(string){return trim(string).replace(reNormalize," ")}},{"trim-x":41,"white-space-x":43}],26:[function(_dereq_,module,exports){/**
 * @file Replace the comments in a string.
 * @version 1.0.3
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module replace-comments-x
 */
"use strict";var isString=_dereq_("is-string"),STRIP_COMMENTS=/((\/\/.*$)|(\/\*[\s\S]*?\*\/))/gm;module.exports=function replaceComments(string){var replacement=arguments.length>1&&isString(arguments[1])?arguments[1]:"";return isString(string)?string.replace(STRIP_COMMENTS,replacement):""}},{"is-string":20}],27:[function(_dereq_,module,exports){/**
 * @file ES6-compliant shim for RequireObjectCoercible.
 * @see {@link http://www.ecma-international.org/ecma-262/6.0/#sec-requireobjectcoercible|7.2.1 RequireObjectCoercible ( argument )}
 * @version 1.4.1
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module require-object-coercible-x
 */
"use strict";var isNil=_dereq_("is-nil-x");module.exports=function RequireObjectCoercible(value){if(isNil(value))throw new TypeError("Cannot call method on "+value);return value}},{"is-nil-x":17}],28:[function(_dereq_,module,exports){/**
 * @file Like ES6 ToString but handles Symbols too.
 * @see {@link https://github.com/Xotic750/to-string-x|to-string-x}
 * @version 2.0.1
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module safe-to-string-x
 */
"use strict";var isSymbol=_dereq_("is-symbol"),toStr=_dereq_("to-string-x"),hasSymbols=_dereq_("has-symbol-support-x"),pToString=hasSymbols&&Symbol.prototype.toString;module.exports=function safeToString(value){return hasSymbols&&isSymbol(value)?pToString.call(value):toStr(value)}},{"has-symbol-support-x":8,"is-symbol":21,"to-string-x":38}],29:[function(_dereq_,module,exports){/**
 * @file Determines whether two values are the same value.
 * @version 1.0.0
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module same-value-x
 */
"use strict";var numberIsNaN=_dereq_("is-nan-x");module.exports=function sameValue(value1,value2){return 0===value1&&0===value2?1/value1==1/value2:value1===value2||!(!numberIsNaN(value1)||!numberIsNaN(value2))}},{"is-nan-x":16}],30:[function(_dereq_,module,exports){/**
 * @file ES6-compliant shim for SameValueZero.
 * @see {@link http://www.ecma-international.org/ecma-262/6.0/#sec-samevaluezero|7.2.10 SameValueZero(x, y)}
 * @version 1.3.1
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module same-value-zero-x
 */
"use strict";var sameValue=_dereq_("same-value-x");module.exports=function sameValueZero(x,y){return x===y||sameValue(x,y)}},{"same-value-x":29}],31:[function(_dereq_,module,exports){/**
 * @file Tests if a value is a string with the boxed bug; splits to an array.
 * @version 1.0.0
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module split-if-boxed-bug-x
 */
"use strict";var strSplit,isString,splitString=!1===_dereq_("has-boxed-string-x");splitString&&(strSplit=String.prototype.split,isString=_dereq_("is-string")),module.exports=function splitIfBoxedBug(value){return splitString&&isString(value)?strSplit.call(value,""):value}},{"has-boxed-string-x":7,"is-string":20}],32:[function(_dereq_,module,exports){/**
 * @file ToInteger converts 'argument' to an integral numeric value.
 * @see {@link http://www.ecma-international.org/ecma-262/6.0/#sec-tointeger|7.1.4 ToInteger ( argument )}
 * @version 2.1.0
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module to-integer-x
 */
"use strict";var toNumber=_dereq_("to-number-x"),numberIsNaN=_dereq_("is-nan-x"),numberIsFinite=_dereq_("is-finite-x"),mathSign=_dereq_("math-sign-x");module.exports=function toInteger(value){var number=toNumber(value);return numberIsNaN(number)?0:0===number||!1===numberIsFinite(number)?number:mathSign(number)*Math.floor(Math.abs(number))}},{"is-finite-x":12,"is-nan-x":16,"math-sign-x":23,"to-number-x":34}],33:[function(_dereq_,module,exports){/**
 * @file ES6-compliant shim for ToLength.
 * @see {@link http://www.ecma-international.org/ecma-262/6.0/#sec-tolength|7.1.15 ToLength ( argument )}
 * @version 2.1.0
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module to-length-x
 */
"use strict";var toInteger=_dereq_("to-integer-x"),MAX_SAFE_INTEGER=_dereq_("max-safe-integer");module.exports=function toLength(value){var len=toInteger(value);return len<=0?0:len>MAX_SAFE_INTEGER?MAX_SAFE_INTEGER:len}},{"max-safe-integer":24,"to-integer-x":32}],34:[function(_dereq_,module,exports){/**
 * @file Converts argument to a value of type Number.
 * @version 1.1.0
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module to-number-x
 */
"use strict";var toPrimitive=_dereq_("to-primitive-x"),trim=_dereq_("trim-x"),pStrSlice=String.prototype.slice,binaryRegex=/^0b[01]+$/i,test=binaryRegex.test,isBinary=function _isBinary(value){return test.call(binaryRegex,value)},octalRegex=/^0o[0-7]+$/i,isOctal=function _isOctal(value){return test.call(octalRegex,value)},nonWS=["\x85","\u200b","\ufffe"].join(""),nonWSregex=new RegExp("["+nonWS+"]","g"),hasNonWS=function _hasNonWS(value){return test.call(nonWSregex,value)},invalidHexLiteral=/^[-+]0x[0-9a-f]+$/i,isInvalidHexLiteral=function _isInvalidHexLiteral(value){return test.call(invalidHexLiteral,value)},$toNumber=function toNumber(argument){var value=toPrimitive(argument,Number);if("symbol"==typeof value)throw new TypeError("Cannot convert a Symbol value to a number");if("string"==typeof value){if(isBinary(value))return $toNumber(parseInt(pStrSlice.call(value,2),2));if(isOctal(value))return $toNumber(parseInt(pStrSlice.call(value,2),8));if(hasNonWS(value)||isInvalidHexLiteral(value))return NaN;var trimmed=trim(value);if(trimmed!==value)return $toNumber(trimmed)}return Number(value)};module.exports=$toNumber},{"to-primitive-x":36,"trim-x":41}],35:[function(_dereq_,module,exports){/**
 * @file ES6-compliant shim for ToObject.
 * @see {@link http://www.ecma-international.org/ecma-262/6.0/#sec-toobject|7.1.13 ToObject ( argument )}
 * @version 1.4.1
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module to-object-x
 */
"use strict";var requireObjectCoercible=_dereq_("require-object-coercible-x");module.exports=function toObject(value){return Object(requireObjectCoercible(value))}},{"require-object-coercible-x":27}],36:[function(_dereq_,module,exports){/**
 * @file Converts a JavaScript object to a primitive value.
 * @version 1.0.1
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module to-primitive-x
 */
"use strict";var hasSymbols=_dereq_("has-symbol-support-x"),isPrimitive=_dereq_("is-primitive"),isDate=_dereq_("is-date-object"),isSymbol=_dereq_("is-symbol"),isFunction=_dereq_("is-function-x"),requireObjectCoercible=_dereq_("require-object-coercible-x"),isNil=_dereq_("is-nil-x"),isUndefined=_dereq_("validate.io-undefined"),symToPrimitive=hasSymbols&&Symbol.toPrimitive,symValueOf=hasSymbols&&Symbol.prototype.valueOf,toStringOrder=["toString","valueOf"],toNumberOrder=["valueOf","toString"],ordinaryToPrimitive=function _ordinaryToPrimitive(O,hint){if(requireObjectCoercible(O),"string"!=typeof hint||"number"!==hint&&"string"!==hint)throw new TypeError('hint must be "string" or "number"');for(var method,result,methodNames="string"===hint?toStringOrder:toNumberOrder,i=0;i<2;i+=1)if(method=O[methodNames[i]],isFunction(method)&&(result=method.call(O),isPrimitive(result)))return result;throw new TypeError("No default value")},getMethod=function _getMethod(O,P){var func=O[P];if(!1===isNil(func)){if(!1===isFunction(func))throw new TypeError(func+" returned for property "+P+" of object "+O+" is not a function");return func}};module.exports=function toPrimitive(input,preferredType){if(isPrimitive(input))return input;var hint="default";arguments.length>1&&(preferredType===String?hint="string":preferredType===Number&&(hint="number"));var exoticToPrim;if(hasSymbols&&(symToPrimitive?exoticToPrim=getMethod(input,symToPrimitive):isSymbol(input)&&(exoticToPrim=symValueOf)),!1===isUndefined(exoticToPrim)){var result=exoticToPrim.call(input,hint);if(isPrimitive(result))return result;throw new TypeError("unable to convert exotic object to primitive")}return"default"===hint&&(isDate(input)||isSymbol(input))&&(hint="string"),ordinaryToPrimitive(input,"default"===hint?"number":hint)}},{"has-symbol-support-x":8,"is-date-object":11,"is-function-x":13,"is-nil-x":17,"is-primitive":18,"is-symbol":21,"require-object-coercible-x":27,"validate.io-undefined":42}],37:[function(_dereq_,module,exports){/**
 * @file Get an object's ES6 @@toStringTag.
 * @see {@link http://www.ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring|19.1.3.6 Object.prototype.toString ( )}
 * @version 1.4.1
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module to-string-tag-x
 */
"use strict";var isNull=_dereq_("lodash.isnull"),isUndefined=_dereq_("validate.io-undefined"),toStr=Object.prototype.toString;module.exports=function toStringTag(value){return isNull(value)?"[object Null]":isUndefined(value)?"[object Undefined]":toStr.call(value)}},{"lodash.isnull":22,"validate.io-undefined":42}],38:[function(_dereq_,module,exports){/**
 * @file ES6-compliant shim for ToString.
 * @see {@link http://www.ecma-international.org/ecma-262/6.0/#sec-tostring|7.1.12 ToString ( argument )}
 * @version 1.4.1
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module to-string-x
 */
"use strict";var isSymbol=_dereq_("is-symbol");module.exports=function ToString(value){if(isSymbol(value))throw new TypeError("Cannot convert a Symbol value to a string");return String(value)}},{"is-symbol":21}],39:[function(_dereq_,module,exports){/**
 * @file This method removes whitespace from the left end of a string.
 * @version 1.3.5
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module trim-left-x
 */
"use strict";var $toString=_dereq_("to-string-x"),reLeft=new RegExp("^["+_dereq_("white-space-x").string+"]+");module.exports=function trimLeft(string){return $toString(string).replace(reLeft,"")}},{"to-string-x":38,"white-space-x":43}],40:[function(_dereq_,module,exports){/**
 * @file This method removes whitespace from the right end of a string.
 * @version 1.3.3
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module trim-right-x
 */
"use strict";var $toString=_dereq_("to-string-x"),reRight=new RegExp("["+_dereq_("white-space-x").string+"]+$");module.exports=function trimRight(string){return $toString(string).replace(reRight,"")}},{"to-string-x":38,"white-space-x":43}],41:[function(_dereq_,module,exports){/**
 * @file This method removes whitespace from the left and right end of a string.
 * @version 1.0.3
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module trim-x
 */
"use strict";var trimLeft=_dereq_("trim-left-x"),trimRight=_dereq_("trim-right-x");module.exports=function trim(string){return trimLeft(trimRight(string))}},{"trim-left-x":39,"trim-right-x":40}],42:[function(_dereq_,module,exports){"use strict";module.exports=function isUndefined(value){return void 0===value}},{}],43:[function(_dereq_,module,exports){/**
 * @file List of ECMAScript5 white space characters.
 * @version 2.0.3
 * @author Xotic750 <Xotic750@gmail.com>
 * @copyright  Xotic750
 * @license {@link <https://opensource.org/licenses/MIT> MIT}
 * @module white-space-x
 */
"use strict";for(var list=[{code:9,description:"Tab",string:"\t"},{code:10,description:"Line Feed",string:"\n"},{code:11,description:"Vertical Tab",string:"\x0B"},{code:12,description:"Form Feed",string:"\f"},{code:13,description:"Carriage Return",string:"\r"},{code:32,description:"Space",string:" "},{code:160,description:"No-break space",string:"\xa0"},{code:5760,description:"Ogham space mark",string:"\u1680"},{code:6158,description:"Mongolian vowel separator",string:"\u180e"},{code:8192,description:"En quad",string:"\u2000"},{code:8193,description:"Em quad",string:"\u2001"},{code:8194,description:"En space",string:"\u2002"},{code:8195,description:"Em space",string:"\u2003"},{code:8196,description:"Three-per-em space",string:"\u2004"},{code:8197,description:"Four-per-em space",string:"\u2005"},{code:8198,description:"Six-per-em space",string:"\u2006"},{code:8199,description:"Figure space",string:"\u2007"},{code:8200,description:"Punctuation space",string:"\u2008"},{code:8201,description:"Thin space",string:"\u2009"},{code:8202,description:"Hair space",string:"\u200a"},{code:8232,description:"Line separator",string:"\u2028"},{code:8233,description:"Paragraph separator",string:"\u2029"},{code:8239,description:"Narrow no-break space",string:"\u202f"},{code:8287,description:"Medium mathematical space",string:"\u205f"},{code:12288,description:"Ideographic space",string:"\u3000"},{code:65279,description:"Byte Order Mark",string:"\ufeff"}],string="",length=list.length,i=0;i<length;i+=1)string+=list[i].string;module.exports={list:list,string:string}},{}]},{},[1])(1)});